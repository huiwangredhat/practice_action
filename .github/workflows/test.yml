on:
  push:
    branches:
      - 'main'

jobs:
  action_practice1:
    runs-on: ubuntu-latest
    steps:
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install -y git
    - name: Checkout (practice_action)
      uses: actions/checkout@v4  # Use the latest version of actions/checkout
      with:
        repository: huiwangredhat/practice_action
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # Specify the Python version
    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v3
      with:
        files: "controls.json"
    - name: check path
      run: |
        pwd
        ls
    - name: File exists
      id: controls
      if: steps.check_files.outputs.files_exists == 'true'
      uses: notiz-dev/github-action-json-property@a5a9c668b16513c737c3e1f8956772c99c73f6e8 # v0.2.0
      with:
        path: 'controls.json'
        prop_path: 'controls'
    - run: echo ${{steps.controls.outputs.prop}}
    # Step 1: Checkout OSCAL content as the trestlebot lab
    - name: Checkout OSCAL content
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        git clone https://github.com/huiwangredhat/trestle-repo.git
      # Step 2: Checkout trestlebot
    - name: Checkout trestlebot
      uses: actions/checkout@v4  # Use the latest version of actions/checkout
      with:
        repository: complytime/trestle-bot
    - name: Setup trestlebot
      run: |
        ls
        pwd
        python3.9 -m pip install --no-cache-dir --upgrade pip setuptools
        python3.9 -m pip install --no-cache-dir "poetry==1.7.1"
        poetry install
    - name: Sync catalog
      run: |
          echo $(cat ${{steps.controls.outputs.prop}} | jq -r '.controls[]')
          poetry run trestlebot --help