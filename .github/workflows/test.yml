on:
  push:
    branches:
      - 'main'

jobs:
  action_practice1:
    runs-on: ubuntu-latest
    steps:
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install -y git
    - name: Checkout (practice_action)
      uses: actions/checkout@v4  # Use the latest version of actions/checkout
      with:
        repository: huiwangredhat/practice_action
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # Specify the Python version
    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v3
      with:
        files: "controls.json"
    - name: check path
      run: |
        pwd
        ls
    - name: File exists
      id: controls
      if: steps.check_files.outputs.files_exists == 'true'
      uses: actions/upload-artifact@v4 # v4
      with:
        name: controls
        path: controls.json
    # Step 1: Checkout relevant repos
    - name: Checkout relevant repos
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        git clone https://github.com/huiwangredhat/trestle-repo.git
        git clone https://github.com/ComplianceAsCode/content.git
        git clone https://github.com/complytime/trestle-bot.git
    - name: Download artifact
      uses: actions/download-artifact@v4 #v4 
      with:
        name: controls
    - name: Setup trestlebot
      run: |
        cd trestle-bot
        python3.9 -m pip install --no-cache-dir --upgrade pip setuptools
        python3.9 -m pip install --no-cache-dir "poetry==1.7.1"
        poetry install
    - name: Sync catalog
      run: |
        cd trestle-bot
        CONTROLS=$(cat ../controls.json | jq -r '.controls[]')
        for control in $CONTROLS; do
          policy_id=$(echo "$control" | cut -f1 -d".")
          if [[ "$policy_id" == *"SRG-APP"* ]] || [[ "$policy_id" == *"SRG-OS"* ]]; then
            echo "Ignoring SRG-APP and SRG-OS: $policy_id"
          elif [[ "$policy_id" == *"section"* ]]; then
            echo "Section found, setting policy_id to 'cis_ocp_1_4_0'"
            policy_id="cis_ocp_1_4_0"
            poetry run trestlebot sync-cac-content catalog  --repo-path ../trestle-repo --committer-email test@redhat.com --committer-name test --branch test --cac-content-root ../content --policy-id $policy_id --oscal-catalog $policy_id
          else
            echo "Syncing catalog with policy_id: $policy_id"
            poetry run trestlebot --help
          fi
        done
    - name: Set up working directory
      run: |
        pwd
        ls
        cd ../trestle-repo
        ls catalogs
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: test  # Source branch (in the subdirectory)
        base: main               # Target branch (main)
        title: "Sync Cac Automatic updates from trestle-bot"   # Customize PR title
        body: "Description of changes in the specified subdirectory"  # PR description in the subdirectory
        draft: false 
         