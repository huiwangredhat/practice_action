name: Sync CaC content to OSCAL
on:
  push:
    branches:
      - 'main'

jobs:
  check-pr-message:
    runs-on: ubuntu-latest
    outputs:
      run_job_check_update: ${{ steps.check_pr.outputs.run_job_check_update }}
    steps:
    - name: Check if the PR comes from the sync of OSCAL content
      id: check_pr
      run: echo "::set-output name=run_job_check_update::true"

  check-cac-content-update:
    runs-on: ubuntu-latest
    needs: check-pr-message
    if: ${{ needs.check-pr-message.outputs.run_job_check_update == 'true' }}
    steps:
      - name: Install Git
      run: sudo apt-get update && sudo apt-get install -y git
      - name: Checkout (practice_action)
        uses: actions/checkout@v4  # Use the latest version of actions/checkout
        with:
          repository: huiwangredhat/practice_action
      # Step 1: Set up Python 3
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify the Python version
      # Step 2: Install Git (if not already installed)
      - name: Install Git
        run: sudo apt-get update && sudo apt-get install -y git
      # Step 3: Install Python dependencies
      - name: Install dependencies
        run: |
          ls
          pwd
          python3 -m pip install --upgrade pip
          pip3 install gitpython PyYAML deepdiff Jinja2 xmldiff
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: "controls.json"
      - name: File exists
        id: controls
        if: steps.check_files.outputs.files_exists == 'true'
        uses: notiz-dev/github-action-json-property@a5a9c668b16513c737c3e1f8956772c99c73f6e8 # v0.2.0
        with:
          path: 'controls.json'
      - run: echo ${{steps.controls.outputs.prop}}
      # Step 1: Checkout OSCAL content as the trestlebot lab
      - name: Checkout OSCAL content
        if: ${{ steps.ctf.outputs.CTF_OUTPUT_SIZE != '0' }}
        run: |
          git clone https://github.com/huiwangredhat/trestle-repo.git
          ls
          pwd
      # Step 2: Checkout trestlebot
      - name: Checkout trestlebot
        uses: actions/checkout@v4  # Use the latest version of actions/checkout
        with:
          repository: complytime/trestle-bot
      - name: Setup trestlebot
        run: |
          ls
          pwd
          python3.9 -m pip install --no-cache-dir --upgrade pip setuptools
          python3.9 -m pip install --no-cache-dir "poetry==1.7.1"
          poetry install
      - name: Sync catalog
        run: |
          ls
          pwd
          ls ../
          #CONTROLS = $(cat ../controls.json | jq -r '.controls[]')
          #echo $CONTROLS
          poetry run trestlebot --help
        
     
      


      
